{"ast":null,"code":"var _jsxFileName = \"E:\\\\kuliah\\\\semester 7\\\\PABW\\\\UTSKopiMahal\\\\my-app\\\\src\\\\Csvp.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to store parsed data\n  const [parsedData, setParsedData] = useState([]);\n\n  //State to store table Column name\n  const [tableRows, setTableRows] = useState([]);\n\n  //State to store the values\n  const [values, setValues] = useState([]);\n  const changeHandler = event => {\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        const rowsArray = [];\n        const valuesArray = [];\n\n        // Iterating data to get column name and their values\n        results.data.map(d => {\n          rowsArray.push(Object.keys(d));\n          valuesArray.push(Object.values(d));\n        });\n\n        // Parsed Data Response in array format\n        setParsedData(results.data);\n\n        // Filtered Column Names\n        setTableRows(rowsArray[0]);\n\n        // Filtered Values\n        setValues(valuesArray);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: changeHandler,\n      accept: \".csv\",\n      style: {\n        display: \"block\",\n        margin: \"10px auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: tableRows.map((rows, index) => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: rows\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: values.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: value.map((val, i) => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 44\n              }, this);\n            })\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"0OmtFBKQjJA2CM4YMPVc3GVsSh8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Papa","App","parsedData","setParsedData","tableRows","setTableRows","values","setValues","changeHandler","event","parse","target","files","header","skipEmptyLines","complete","results","rowsArray","valuesArray","data","map","d","push","Object","keys","display","margin","rows","index","value","val","i"],"sources":["E:/kuliah/semester 7/PABW/UTSKopiMahal/my-app/src/Csvp.js"],"sourcesContent":["import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport Papa from \"papaparse\";\r\n\r\nfunction App() {\r\n    // State to store parsed data\r\n    const [parsedData, setParsedData] = useState([]);\r\n\r\n    //State to store table Column name\r\n    const [tableRows, setTableRows] = useState([]);\r\n\r\n    //State to store the values\r\n    const [values, setValues] = useState([]);\r\n\r\n    const changeHandler = (event) => {\r\n        // Passing file data (event.target.files[0]) to parse using Papa.parse\r\n        Papa.parse(event.target.files[0], {\r\n            header: true,\r\n            skipEmptyLines: true,\r\n            complete: function (results) {\r\n                const rowsArray = [];\r\n                const valuesArray = [];\r\n\r\n                // Iterating data to get column name and their values\r\n                results.data.map((d) => {\r\n                    rowsArray.push(Object.keys(d));\r\n                    valuesArray.push(Object.values(d));\r\n                });\r\n\r\n                // Parsed Data Response in array format\r\n                setParsedData(results.data);\r\n\r\n                // Filtered Column Names\r\n                setTableRows(rowsArray[0]);\r\n\r\n                // Filtered Values\r\n                setValues(valuesArray);\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* File Uploader */}\r\n            <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                onChange={changeHandler}\r\n                accept=\".csv\"\r\n                style={{ display: \"block\", margin: \"10px auto\" }}\r\n            />\r\n            <br />\r\n            <br />\r\n            {/* Table */}\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {tableRows.map((rows, index) => {\r\n                            return <th key={index}>{rows}</th>;\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {values.map((value, index) => {\r\n                        return (\r\n                            <tr key={index}>\r\n                                {value.map((val, i) => {\r\n                                    return <td key={i}>{val}</td>;\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,WAAW;AAAC;AAE7B,SAASC,GAAG,GAAG;EAAA;EACX;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,aAAa,GAAIC,KAAK,IAAK;IAC7B;IACAT,IAAI,CAACU,KAAK,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC9BC,MAAM,EAAE,IAAI;MACZC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAE,UAAUC,OAAO,EAAE;QACzB,MAAMC,SAAS,GAAG,EAAE;QACpB,MAAMC,WAAW,GAAG,EAAE;;QAEtB;QACAF,OAAO,CAACG,IAAI,CAACC,GAAG,CAAEC,CAAC,IAAK;UACpBJ,SAAS,CAACK,IAAI,CAACC,MAAM,CAACC,IAAI,CAACH,CAAC,CAAC,CAAC;UAC9BH,WAAW,CAACI,IAAI,CAACC,MAAM,CAACjB,MAAM,CAACe,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC;;QAEF;QACAlB,aAAa,CAACa,OAAO,CAACG,IAAI,CAAC;;QAE3B;QACAd,YAAY,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC;;QAE1B;QACAV,SAAS,CAACW,WAAW,CAAC;MAC1B;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACI;IAAA,wBAEI;MACI,IAAI,EAAC,MAAM;MACX,IAAI,EAAC,MAAM;MACX,QAAQ,EAAEV,aAAc;MACxB,MAAM,EAAC,MAAM;MACb,KAAK,EAAE;QAAEiB,OAAO,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAY;IAAE;MAAA;MAAA;MAAA;IAAA,QACnD,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MAAA,wBACI;QAAA,uBACI;UAAA,UACKtB,SAAS,CAACgB,GAAG,CAAC,CAACO,IAAI,EAAEC,KAAK,KAAK;YAC5B,oBAAO;cAAA,UAAiBD;YAAI,GAAZC,KAAK;cAAA;cAAA;cAAA;YAAA,QAAa;UACtC,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA,QACD,eACR;QAAA,UACKtB,MAAM,CAACc,GAAG,CAAC,CAACS,KAAK,EAAED,KAAK,KAAK;UAC1B,oBACI;YAAA,UACKC,KAAK,CAACT,GAAG,CAAC,CAACU,GAAG,EAAEC,CAAC,KAAK;cACnB,oBAAO;gBAAA,UAAaD;cAAG,GAAPC,CAAC;gBAAA;gBAAA;gBAAA;cAAA,QAAY;YACjC,CAAC;UAAC,GAHGH,KAAK;YAAA;YAAA;YAAA;UAAA,QAIT;QAEb,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEd;AAAC,GAxEQ3B,GAAG;AAAA,KAAHA,GAAG;AA0EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}