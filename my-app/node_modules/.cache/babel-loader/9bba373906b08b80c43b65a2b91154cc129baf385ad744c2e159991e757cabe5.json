{"ast":null,"code":"var _jsxFileName = \"E:\\\\kuliah\\\\semester 7\\\\PABW\\\\UTSKopiMahal\\\\my-app\\\\src\\\\Csvp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { useCSVReader } from 'react-papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allowedExtensions = [\"csv\"];\nconst Csvp = () => {\n  _s();\n  const [parsedCsvData, setParsedCsvData] = useState([]);\n  const parseFile = file => {\n    Papa.parse(file, {\n      header: true,\n      complete: results => {\n        setParsedCsvData(results.data);\n      }\n    });\n  };\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length) {\n      parseFile(acceptedFiles[0]);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Kanji\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Reading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: parsedCsvData && parsedCsvData.map((parsedData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: parsedData.Kanji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: parsedData.Reading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: parsedData.English\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n};\n_s(Csvp, \"/+I0s4jGqq2W+tkQoc3c2uaOsp0=\");\n_c = Csvp;\nexport default Csvp;\nvar _c;\n$RefreshReg$(_c, \"Csvp\");","map":{"version":3,"names":["React","useState","Papa","useCSVReader","allowedExtensions","Csvp","parsedCsvData","setParsedCsvData","parseFile","file","parse","header","complete","results","data","onDrop","useCallback","acceptedFiles","length","map","parsedData","index","Kanji","Reading","English"],"sources":["E:/kuliah/semester 7/PABW/UTSKopiMahal/my-app/src/Csvp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { useCSVReader } from 'react-papaparse';\r\n\r\nconst allowedExtensions = [\"csv\"];\r\n\r\nconst Csvp = () => {\r\n    const [parsedCsvData, setParsedCsvData] = useState([]);\r\n    const parseFile = file => {\r\n        Papa.parse(file, {\r\n            header: true,\r\n            complete: results => {\r\n                setParsedCsvData(results.data)\r\n            },\r\n        });\r\n    };\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        if (acceptedFiles.length) {\r\n            parseFile(acceptedFiles[0]);\r\n        }\r\n    }, []);\r\n\r\n    return (<table>\r\n        <thead>\r\n            <tr>\r\n                <th>Kanji</th>\r\n                <th>Reading</th>\r\n                <th>English</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {parsedCsvData &&\r\n                parsedCsvData.map((parsedData, index) => (\r\n                    <tr key={index}>\r\n                        <td>{parsedData.Kanji}</td>\r\n                        <td>{parsedData.Reading}</td>\r\n                        <td>{parsedData.English}</td>\r\n                    </tr>\r\n                ))}\r\n        </tbody>\r\n    </table>);\r\n\r\n\r\n\r\n};\r\n\r\nexport default Csvp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,YAAY,QAAQ,iBAAiB;AAAC;AAE/C,MAAMC,iBAAiB,GAAG,CAAC,KAAK,CAAC;AAEjC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMO,SAAS,GAAGC,IAAI,IAAI;IACtBP,IAAI,CAACQ,KAAK,CAACD,IAAI,EAAE;MACbE,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAEC,OAAO,IAAI;QACjBN,gBAAgB,CAACM,OAAO,CAACC,IAAI,CAAC;MAClC;IACJ,CAAC,CAAC;EACN,CAAC;EACD,MAAMC,MAAM,GAAGC,WAAW,CAACC,aAAa,IAAI;IACxC,IAAIA,aAAa,CAACC,MAAM,EAAE;MACtBV,SAAS,CAACS,aAAa,CAAC,CAAC,CAAC,CAAC;IAC/B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAQ;IAAA,wBACJ;MAAA,uBACI;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB,eAChB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA;IACf;MAAA;MAAA;MAAA;IAAA,QACD,eACR;MAAA,UACKX,aAAa,IACVA,aAAa,CAACa,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBAChC;QAAA,wBACI;UAAA,UAAKD,UAAU,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAC3B;UAAA,UAAKF,UAAU,CAACG;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM,eAC7B;UAAA,UAAKH,UAAU,CAACI;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA,GAHxBH,KAAK;QAAA;QAAA;QAAA;MAAA,QAKjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAIZ,CAAC;AAAC,GAtCIhB,IAAI;AAAA,KAAJA,IAAI;AAwCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}